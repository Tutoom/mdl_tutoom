{"version":3,"file":"activity.min.js","sources":["../src/activity.js"],"sourcesContent":["/* eslint-disable */\n\nimport {\n  clearMainSection,\n  endMeeting,\n  joinMeeting,\n  startMeeting,\n} from \"./meeting\";\nimport { getRecordings } from \"./recording\";\n\nM.mod_tutoom = M.mod_tutoom || {};\n\nexport const init = (params) => {\n  window.tutoom = params;\n\n  const { showRecordings } = params;\n\n  document.addEventListener(\"click\", async (e) => {\n    const elementName = e.target.name;\n    const elementId = e.target.id;\n\n    if (elementId) {\n      if (elementId === \"tutoom-start-button\") startMeeting(e);\n      if (elementId === \"tutoom-end-button\") endMeeting(e);\n      if (elementId === \"tutoom-join-button\") joinMeeting(e);\n      if (elementId === \"tutoom-refresh-main-section\") clearMainSection(e);\n\n      if (elementId === \"tutoom-recordings-btn-previous\") {\n        const classNames = e.target.className;\n        if (classNames.includes(\"disabled\")) {\n          e.preventDefault();\n        } else {\n          const currentPage = document.getElementById(\n            \"tutoom-recordings-current-page\"\n          ).value;\n\n          await getRecordings({ page: parseInt(currentPage) - 1 });\n        }\n      }\n\n      if (elementId === \"tutoom-recordings-btn-next\") {\n        const classNames = e.target.className;\n        if (classNames.includes(\"disabled\")) {\n          e.preventDefault();\n        } else {\n          const currentPage = document.getElementById(\n            \"tutoom-recordings-current-page\"\n          ).value;\n\n          await getRecordings({ page: parseInt(currentPage) + 1 });\n        }\n      }\n    }\n\n    if (elementName) {\n      if (elementName === \"btn-page\") {\n        const page = parseInt(e.target.value);\n        const currentPage = parseInt(\n          document.getElementById(\"tutoom-recordings-current-page\").value\n        );\n\n        if (currentPage === page) {\n          e.preventDefault();\n          return;\n        }\n\n        await getRecordings({ page });\n      }\n    }\n  });\n\n  setTimeout(async () => {\n    if (showRecordings) {\n      const { countRecordings } = params;\n      if (countRecordings > 0) {\n        await getRecordings({ page: 1, isFirstTime: true });\n      }\n    }\n  }, 1);\n};\n"],"names":["M","mod_tutoom","params","window","tutoom","showRecordings","document","addEventListener","e","elementName","target","name","elementId","id","className","includes","preventDefault","currentPage","getElementById","value","page","parseInt","setTimeout","countRecordings","isFirstTime"],"mappings":"wuBAUAA,EAAEC,WAAaD,EAAEC,YAAc,iBAEX,SAACC,QACnBC,OAAOC,OAASF,gBAERG,eAAmBH,OAAnBG,eAERC,SAASC,iBAAiB,yDAAS,iBAAOC,mKAClCC,YAAcD,EAAEE,OAAOC,OACvBC,UAAYJ,EAAEE,OAAOG,+BAGP,wBAAdD,YAAqC,yBAAaJ,GACpC,sBAAdI,YAAmC,uBAAWJ,GAChC,uBAAdI,YAAoC,wBAAYJ,GAClC,gCAAdI,YAA6C,6BAAiBJ,GAEhD,mCAAdI,sCACiBJ,EAAEE,OAAOI,UACbC,SAAS,oCACtBP,EAAEQ,uDAEIC,YAAcX,SAASY,eAC3B,kCACAC,wBAEI,4BAAc,CAAEC,KAAMC,SAASJ,aAAe,eAItC,+BAAdL,sCACiBJ,EAAEE,OAAOI,UACbC,SAAS,oCACtBP,EAAEQ,uDAEIC,aAAcX,SAASY,eAC3B,kCACAC,wBAEI,4BAAc,CAAEC,KAAMC,SAASJ,cAAe,gBAKtDR,uCACkB,aAAhBA,uCACIW,KAAOC,SAASb,EAAEE,OAAOS,OACXE,SAClBf,SAASY,eAAe,kCAAkCC,SAGxCC,oCAClBZ,EAAEQ,4EAIE,4BAAc,CAAEI,KAAAA,kHAK5BE,sDAAW,gIACLjB,4CAC0BH,OAApBqB,gBACc,oDACd,4BAAc,CAAEH,KAAM,EAAGI,aAAa,8DAG/C"}